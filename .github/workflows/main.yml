name: DipeshGSIs Bot3

on:
  workflow_dispatch:

env:
  TZ: Asia/Dhaka
  TOKEN: ${{ secrets.TOKEN }}
jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 525600

    steps:
       - name: Checkouts
         uses: actions/checkout@master
       - uses: rokibhasansagar/slimhub_actions@main

       - name: Reclaiming disk space on / by disabling swap partition
         run: |
               sudo swapoff -av
               sudo rm -f /swapfile

       - name: Create swap (Avoid mk2fs issues)
         run: |
              sudo dd if=/dev/zero of=swap bs=4k count=1048576
              sudo mkswap swap
              sudo swapon swap

       - name: Setup git Environment
         run: |
              git config --global user.name "daksh1684"
              git config --global user.email "dipeshtech@protonmail.com"
              git config --global pull.rebase false

       - name: Setup Bobot Environment
         continue-on-error: true
         run: |
              git clone https://github.com/DipeshGSI-private/Bot3-Dipesh -b sf
              mkdir configs && cd configs
              touch configs.prop
              echo "bot-token=${{ secrets.BOTKEY }}" >> "configs.prop"
              echo "bot-username=${{ secrets.BOTUN }}" >> "configs.prop"
              echo "bot-master=${{ secrets.USERKEY }}" >> "configs.prop"
              echo "privateChat=-1001401549638" >> "configs.prop"
              echo "requestChat=-1001212338973" >> "configs.prop"
              echo "publicChannel=dpgsi_updates" >> "configs.prop"
              touch sf-creds.prop
              echo "bot-sf-pass=${{ secrets.SF_PASS }}" >> "sf-creds.prop"
              echo "bot-sf-proj=${{ secrets.PROJECT }}" >> "sf-creds.prop"
              echo "bot-sf-user=${{ secrets.SF_USER }}" >> "sf-creds.prop"
              echo "bot-announcement-id=-1001616595070" >> "sf-creds.prop"
              echo "bot-sf-host=frs.sourceforge.net" >> "sf-creds.prop"
              echo "bot-send-announcement=true" >> "sf-creds.prop"
              echo '["783675636"]' >> "configs/allowed2port.json"

       - name: Clone workflow
         continue-on-error: true
         run: |
              mkdir tmp && cd tmp
              git clone https://github.com/DipeshGSI-private/Bot3-Workflow Bobot

       - name: Install OpenJDK 8 & other tools/packages
         continue-on-error: true
         timeout-minutes: 5
         run: |
              sudo -E apt-get -qq update
              sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev rsync flex bison ccache openjdk-8-jdk expect aria2 unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller device-tree-compiler liblzma-dev brotli liblz4-tool axel gawk aria2 detox cpio rename build-essential simg2img aria2 python3-pip

       - name: Setup Erfan GSIs Tool
         continue-on-error: true
         timeout-minutes: 2
         run: |
              git clone --recurse-submodules --depth 1 https://github.com/erfanoabdi/ErfanGSIs ErfanGSIs
              pip3 install wheel setuptools
              pip3 install backports.lzma docopt zstandard bsdiff4 protobuf pycrypto
              sudo pip3 install --upgrade protobuf

       - name: Build & Run Bot3 source
         continue-on-error: true
         timeout-minutes: 350
         run: |
              export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
              export PATH=$PATH:$JAVA_HOME/bin
              sudo dpkg --purge --force-depends ca-certificates-java
              sudo apt-get install ca-certificates-java -y
              cd Bot3
              ./gradlew shadowJar
              cd ../; mv Bot3/build/libs/*.jar BoboBot-1-all.jar
              rm -rf Bot3
              sudo java -jar BoboBot-1-all.jar

       - name: Re-run Bot3 workflow
         continue-on-error: true
         timeout-minutes: 5
         run: |
              cd tmp/Bobot
              git commit --allow-empty -s -m "[LOOP] Re-run Bot3 workflow"
              expect -c "
              spawn git push -f
              expect \"Username\"
              send \"${{ secrets.GH_USER }}\r\"
              expect \"Password\"
              send \"${{ secrets.GH_PASS }}\r\"
              expect \"master -> master\"
              set timeout -10
              interact"
              curl -X POST --header "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/main.yml/dispatches -d '{"ref":"main"}'
